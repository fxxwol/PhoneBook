{"version":3,"file":"static/js/931.e3ba61b6.chunk.js","mappings":"kOAGaA,EAAOC,EAAAA,EAAAA,KAAH,wKAUJC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,EAAPF,CAAH,2M,oJCkEtB,MAxEA,WACE,IAAMG,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KACPG,SAAS,yBACTE,IAAI,EAAG,sDACPC,QAAQ,WAAY,8CAGnBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbP,MAAO,GACPE,SAAU,IAEZM,SAAU,SAAAC,GACR,IAAMC,EAAS,CAAC,EAChB,IACEb,EAAYc,aAAaF,EAAQ,CAAEG,YAAY,GAKhD,CAJC,MAAOC,GACPA,EAAiBC,MAAMC,SAAQ,SAAAC,GAC7BN,EAAOM,EAAMC,MAAQD,EAAME,OAC5B,GACF,CAED,OAAOR,CACR,EACDS,SAAU,SAAAC,GACRC,QAAQC,IAAIF,GACZf,EAAOkB,WACR,IAGH,OACE,UAAC,IAAD,CAAMJ,SAAUd,EAAOmB,aAAvB,WACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,oBACA,SAACC,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,MAAO5B,EAAOI,OAAOT,MACrBkC,SAAU7B,EAAO8B,aACjBC,OAAQ/B,EAAOgC,WACfC,aAAa,KACbtB,MAAOX,EAAOkC,QAAQvC,OAASwC,QAAQnC,EAAOK,OAAOV,SAEtDK,EAAOkC,QAAQvC,OAASK,EAAOK,OAAOV,OACrC,yBAAMK,EAAOK,OAAOV,QAClB,SAEN,UAACyB,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,uBACA,SAACC,EAAA,EAAD,CACEG,GAAG,WACHD,KAAK,WACLE,KAAK,WACLC,MAAO5B,EAAOI,OAAOP,SACrBc,MAAOX,EAAOkC,QAAQrC,UAAYsC,QAAQnC,EAAOK,OAAOR,UACxDgC,SAAU7B,EAAO8B,aACjBC,OAAQ/B,EAAOgC,WACfC,aAAa,OAEdjC,EAAOkC,QAAQrC,UAAYG,EAAOK,OAAOR,UACxC,yBAAMG,EAAOK,OAAOR,WAClB,SAEN,SAAC,IAAD,CAAW4B,KAAK,SAAhB,2BAGL,ECpED,MANA,WACE,OACE,SAAC,EAAD,GAEH,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Button } from \"@mui/material\";\n\nexport const Form = styled.form`\n    display: flex;\n    gap: 15px;\n    justify-content: start;\n    align-items: baseline;\n    margin-top: 40px;\n    margin-bottom: 40px;\n\n`\n\nexport const SubmitBtn = styled(Button)`\n  border: 1px solid;\n  border-color: #1f398786;\n  &:hover,\n  :active,\n  :focus {\n    border-color:rgba(3, 44, 84, 0.5);\n    box-shadow: 0 0 0 1px rgba(3, 44, 84, 0.5);\n  }\n`;","import React from 'react';\nimport { FormControl, Input, InputLabel } from '@mui/material';\nimport { SubmitBtn } from 'components/ContactForm/ContactForm.styled';\nimport { useFormik } from 'formik';\nimport { Form } from './ContactForm/ContactForm.styled';\nimport * as Yup from 'yup';\n\nfunction LoginForm() {\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string()\n      .required('No password provided.')\n      .min(8, 'Password is too short - should be 8 chars minimum.')\n      .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validate: values => {\n      const errors = {};\n      try {\n        LoginSchema.validateSync(values, { abortEarly: false });\n      } catch (validationErrors) {\n        validationErrors.inner.forEach(error => {\n          errors[error.path] = error.message;\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: user => {\n      console.log(user);\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <FormControl>\n        <InputLabel htmlFor=\"email\">Email</InputLabel>\n        <Input\n          size=\"small\"\n          type=\"text\"\n          id=\"email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          autoComplete=\"on\"\n          error={formik.touched.email && Boolean(formik.errors.email)}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          value={formik.values.password}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          autoComplete=\"on\"\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div>{formik.errors.password}</div>\n        ) : null}\n      </FormControl>\n      <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm'\nimport React from 'react'\n\nfunction LoginPage() {\n  return (\n    <LoginForm/>\n  )\n}\n\nexport default LoginPage"],"names":["Form","styled","SubmitBtn","Button","LoginSchema","Yup","shape","email","required","password","min","matches","formik","useFormik","initialValues","validate","values","errors","validateSync","abortEarly","validationErrors","inner","forEach","error","path","message","onSubmit","user","console","log","resetForm","handleSubmit","FormControl","InputLabel","htmlFor","Input","size","type","id","name","value","onChange","handleChange","onBlur","handleBlur","autoComplete","touched","Boolean"],"sourceRoot":""}